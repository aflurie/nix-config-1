#!/bin/bash -xe

BOOT_USER=${1:-periklis}
BOOT_MACHINE=${2:-theopompos}
BOOT_BRANCH=${3:-origin/master}

VALID_USERS=("periklis" "ptsirakidis")
VALID_MACHINES=("alphaomega" "theopompos")
VALID_BRANCHES=("origin/master" "latest-release")

BASE_DIR=~/projects/"${BOOT_USER}"
BASE_MACHINE_DIR="${BASE_DIR}/nix-config/${BOOT_MACHINE}"

if [[ " ${VALID_USERS[*]} " != *"$BOOT_USER"* ]];
then
    echo "Provided user is not valid!"
    exit 1
fi

if [[ " ${VALID_MACHINES[*]} " != *"$BOOT_MACHINE"* ]];
then
    echo "Provided machine is not valid!"
    exit 1
fi

if [[ " ${VALID_BRANCHES[*]} " != *"$BOOT_BRANCH"* ]];
then
    echo "Provided branch is not valid!"
    exit 1
fi

echo "Booting machine $BOOT_MACHINE for $BOOT_USER on $BOOT_BRANCH"
echo
echo "Initialize base repositories"

if [ ! -d "${BASE_DIR}" ];
then
    mkdir -p "${BASE_DIR}"
fi

cd "${BASE_DIR}"

if [[ -d "${BASE_DIR}/nix-config" ]]; then
    echo "Base repository nix-config exists"
else
    git clone git@github.com:periklis/nix-config.git
fi


cd "${BASE_DIR}"/nix-config
if [[ -f "${BASE_DIR}/nix-config/nixpkgs/default.nix" ]]; then
    echo "Base nix-config submodule nixpkgs exists"
else
    git submodule update --init -- nixpkgs
fi

if [[ -f "${BASE_DIR}/nix-config/nix-darwin/default.nix" ]]; then
    echo "Base nix-config submodule nix-darwin exists"
else
    git submodule update --init -- nix-darwin
fi

if [[ -f "${BASE_DIR}/nix-config/${BOOT_MACHINE}/default.nix" ]]; then
    echo "Base nix-config submodule ${BOOT_MACHINE} exists"
else
    git submodule update --init -- "${BOOT_MACHINE}"
fi

echo
echo "Symlink $BOOT_MACHINE machine configuration"
ln -sf "${BASE_MACHINE_DIR}/machine.nix" machine.nix

echo
echo "Initialize emacs repositories"

cd "${BASE_DIR}"
if [[ -d "${BASE_DIR}/dot-emacs" ]]; then
    echo "Repository dot-emacs exists"
else
    git clone --recurse-submodules git@github.com:periklis/dot-emacs.git

    ln -sf "${BASE_DIR}/dot-emacs" ~/.emacs.d
    ln -sf "${BASE_DIR}/dot-emacs/machines/common.el" dot-emacs/common.el
    ln -sf "${BASE_DIR}/dot-emacs/machines/${BOOT_MACHINE}/local.el" dot-emacs/local.el
fi

echo
echo "Initialize org repository"
if [[ -d "${BASE_DIR}/org" ]]; then
    echo "Repository org exists"
else
    git clone git@github.com:periklis/org.git
    ln -sf "${BASE_DIR}/org" ~/org
fi

if [[ :$PATH: != *:"/nix/var/nix/profiles/default/bin":* ]];
then
    echo
    echo "Install Nix Package Manager"
    curl https://nixos.org/nix/install | sh
fi

if [[ :$NIX_PATH: != *:"${BASE_DIR}/nix-config/nix-darwin":* ]];
then
    echo
    echo "Install Nix-Darwin Manager"
    sudo ln -sf private/var/run /run
    export NIX_PATH=darwin="${BASE_DIR}"/nix-config/nix-darwin:darwin-config="${BASE_DIR}"/nix-config/configuration.nix:"${NIX_PATH}"
    "$(nix-build '<darwin>' -A system --no-out-link)"/sw/bin/darwin-rebuild build
    "$(nix-build '<darwin>' -A system --no-out-link)"/sw/bin/darwin-rebuild switch
    . /etc/static/zshrc
fi
